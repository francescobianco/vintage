#!/bin/sh
set -eu

# shellcheck disable=SC2034
VERSION=0.1

# shellcheck disable=SC1083
parser_definition() {
	setup   REST help:usage abbr:true -- \
		"Usage: ${2##*/} [global options...] [command] [options...] [arguments...]"
	msg -- '' 'getoptions subcommand example' ''
	msg -- 'Options:'
	flag    GLOBAL  -g --global    -- "global flag"
	flag    TASK       --task      -- "global flag"
  disp    :usage  -h --help
	disp    VERSION    --version

	msg -- '' 'Commands:'
	cmd add -- "subcommand 1"
	cmd run -- "subcommand 2"
	cmd exec -- "subcommand 3"
}

# shellcheck disable=SC1083
parser_definition_add() {
	setup   REST help:usage abbr:true -- \
		"Usage: ${2##*/} add [options...] [archives...]"
	msg -- '' 'getoptions subcommand example' ''
	msg -- 'Options:'
	flag    FLAG_A  -a --flag-a
	disp    :usage  -h --help
}

# shellcheck disable=SC1083
parser_definition_run() {
	setup   REST help:usage abbr:true -- \
		"Usage: ${2##*/} cmd2 [options...] [arguments...]"
	msg -- '' 'getoptions subcommand example' ''
	msg -- 'Options:'
	flag    FLAG_B  -b --flag-b
	disp    :usage  -h --help
}

# shellcheck disable=SC1083
parser_definition_exec() {
	setup   REST help:usage abbr:true -- \
		"Usage: ${2##*/} cmd3 [options...] [arguments...]"
	msg -- '' 'getoptions subcommand example' ''
	msg -- 'Options:'
	flag    FLAG_C  -c --flag-c
	disp    :usage  -h --help
}

eval "$(getoptions parser_definition parse "$0") exit 1"
parse "$@"
eval "set -- $REST"

[ -z ${TASK} ] && echo "Vintage ${VERSION} by Francesco Bianco <bianco@javanile.org>"

if [ $# -gt 0 ]; then
	cmd=$1
	shift
	case $cmd in
		add)
			eval "$(getoptions parser_definition_add parse "$0")"
			parse "$@"
			eval "set -- $REST"
			echo "FLAG_A: $FLAG_A"
			echo "GLOBAL: $GLOBAL"
			echo "TASK: $TASK"
      i=0
      while [ $# -gt 0 ] && i=$((i + 1)); do
        archive=$(echo $1 | cut -d@ -f1)
        version=$(echo $1@main | cut -d@ -f2)
        spawn="vintage --task exec https://github.com/francescobianco/vintage/raw/main/archive/${archive}/${version}/setup.sh"
      	echo "$i: $1 - $spawn"
      	${spawn}
      	shift
      done
			;;
		run)
			eval "$(getoptions parser_definition_run parse "$0")"
			parse "$@"
			eval "set -- $REST"
			echo "FLAG_B: $FLAG_B"
			;;
		exec)
			eval "$(getoptions parser_definition_exec parse "$0")"
			parse "$@"
			eval "set -- $REST"
			echo "FLAG_C: $FLAG_C"
      echo "TASK: $TASK"
			;;
		--) # no subcommand, arguments only
	esac
fi
